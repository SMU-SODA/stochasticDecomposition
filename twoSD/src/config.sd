// Tolerance level used to differentiate floating point numbers */
TOLERANCE    0.0001

// Minimum iterations
MIN_ITER 10

// Maximum number of iterations
MAX_ITER   5000

// Maximum number of iterations in each node
MAX_ITER_CLBK   400

// Maximum number of visited nodes 
MAX_NODES   500

// Branching strategies
// 0: index based - 1: maximimum fractional val
// strategies >= 1 currently tested for biary variables
BRN_STR   0

// Variable selection strategy
// 0: regular - 1: closest integer first - 2: minimum fractional val - 3: fractional val closer to 0.5
// strategies >= 1 currently tested for biary variables
VAR_STR   0

// This flag is for evaluating the dual values in the argmax subroutine
// If it is on only the recent duals from the parent node and new obs are 
// used for the argmax subroutine
Pi_EVAL_FLAG  0

// Flag of using heuristic for the intial upper bound estimate in bnc
HEURST_FLAG  0

// Master type: 0 for LP, 1 for MILP, 5 for QP and 7 for MIQP
MASTER_TYPE 1

// Multiplier for the number of cuts; with QP, SD sets this to 1
CUT_MULT  1

// Number of iterations after which incumbent cut is reevaluated.
TAU 2

// The Minimum value of the cell->quad_scalar.
MIN_QUAD_SCALAR 0.001

// ******************** SMIP options ********************

// Type of SMIP solver to be employed 0 - MILP, 1 - CUSTOM and 2 - CALLBACK 
SMIP_SOLVER 2

// Number of nodes to save sol info 
NodeNum 100

// Type of algoithm to be employed 0 - Lshped and 1 - scenario decomposition
SMIP_ALGO 0

// MILP optimality gap (for each solve when used in SMIP_SOLVER = 1
SMIP_OPTGAP 0.05

// Run seeds
RUN_SEED    4650175399072632
RUN_SEED	3554548844580680
RUN_SEED    6070772756632709
RUN_SEED    5451675876709589
RUN_SEED    5285327724846206
RUN_SEED    5588857889468088
RUN_SEED    1098833779416153
RUN_SEED    6192593982049265
RUN_SEED    4756774140130874
RUN_SEED    6784592265109609
RUN_SEED    9728429908537680
RUN_SEED    1163479388309571
RUN_SEED    3279282318700126
RUN_SEED    8773753208032360
RUN_SEED    9337302665697748
RUN_SEED    4415169667296773
RUN_SEED    4220432037464045
RUN_SEED    3554548844580680
RUN_SEED    1814300451929103
RUN_SEED    5339672949292608
RUN_SEED    5638710736762732
RUN_SEED    3154245808720589
RUN_SEED    2414929536171258
RUN_SEED    7998609999427572
RUN_SEED    7080145164625719
RUN_SEED    3612848862740490586
RUN_SEED    7772725003305823
RUN_SEED    5982768791029230
RUN_SEED    1395182510837913
RUN_SEED    3735836402047426

// Indicate whether to employ (by setting equal to 1) evaluation of the eventual solution
EVAL_FLAG 1

// Solution tolerance for deciding the usage of mean solution.
EVAL_MIN_ITER 100

// Obj. eval. is accurate to within this much, w/95% confidence
EVAL_ERROR 2.0

// Random number seed for resampling omegas during evaluation
EVAL_SEED	4317459304174907
EVAL_SEED	8879657642464524
EVAL_SEED	1499740298834250
EVAL_SEED	8272809468603661
EVAL_SEED	9321928632105101
EVAL_SEED	8879657642464524
EVAL_SEED	1646307759053034
EVAL_SEED	1397125657640682
EVAL_SEED	3146928660304649
EVAL_SEED	6086062973158789
EVAL_SEED	4261811376433110
EVAL_SEED	5160431490422796
EVAL_SEED	7210299483505433
EVAL_SEED	2742341912700425
EVAL_SEED	1085010081252686
EVAL_SEED	8513449869606798
EVAL_SEED	7093281297971938
EVAL_SEED	7988825411001281
EVAL_SEED	4183664541491746
EVAL_SEED	3145719174690472
EVAL_SEED	7565122826024890
EVAL_SEED	5245385869406164
EVAL_SEED	2209547377191484
EVAL_SEED	9707622650545090
EVAL_SEED	3276474213926122
EVAL_SEED	3808908035978675
EVAL_SEED	7200786232212849811
EVAL_SEED	3531095045851544
EVAL_SEED	8536356961121783
EVAL_SEED	4742397086462006

// ******************************* The following parameters are useful only for 2-SD algorithm ******************************* 
// The Maximum value of the cell->quad_scalar.
MAX_QUAD_SCALAR 10000.0

// Amount of improvement which must be observed in order to update incumbent X.
R1 0.2

// For updating the scaling factor.
R2 0.95

// For updating the scaling factor.
R3 2

// Minimum incumbent change for incumbent update
MIN_X  0.3

// Switch for dual stability test 
DUAL_STABILITY	0

// Number of iterations before checking new pis impact
PI_EVAL_START 0

// Number of iterations between evaluation of the impact of new dual vertex
PI_CYCLE 1

// Number of resampling to take when checking optimality.
BOOTSTRAP_REP 50 

// Percent of resampled solutions which must meet test for optimality.
PERCENT_PASS 0.5

// Ratio used in pre_test for optimality: (Sm - Lm) / Fk  < PRE_EPSILON.
PRE_EPSILON 0.01 

// EPSILON: Stopping rule tolerance, ratio used in test for optimality: (Sm - Lm) / Fk  < EPSILON. The variance of the ratio indicates the stability of the dual vertex set.
// SCAN LENGTH (a powers of 2): the window size over which the stability of dual vertex set is measured.
// Suggested tolerance(EPSILON, SCAN_LEN) = loose (0.01, 128), nomimal (0.001, 256) and tight (0.0001, 512).
EPSILON 0.05
SCAN_LEN 128

// Number of replications
MULTIPLE_REP 30

// Create compromise problem
COMPROMISE_PROB	0

// Number of observations added to the sample in each iteration (default is 1)
SAMPLE_INCREMENT	1

// Integer tolerance 
INT_TOLERANCE  0.000001
